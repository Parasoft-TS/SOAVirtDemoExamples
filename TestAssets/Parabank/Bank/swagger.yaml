---
swagger: "2.0"
info:
  license:
    name: "Apache 2.0 License"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "dev1.parasoft.com:8081"
basePath: "/parabank/services/bank"
tags:
- name: "Positions"
- name: "Customers"
- name: "Accounts"
- name: "Database"
- name: "JMS"
- name: "Transactions"
- name: "Loans"
- name: "Misc"
paths:
  /customers/{customerId}/buyPosition:
    post:
      tags:
      - "Positions"
      summary: "Buy a Position"
      description: ""
      operationId: "buyPosition"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      - name: "accountId"
        in: "query"
        description: "Customer funds source account"
        required: true
        type: "integer"
        format: "int32"
      - name: "name"
        in: "query"
        description: "Instrument's Name"
        required: true
        type: "string"
      - name: "symbol"
        in: "query"
        description: "Instrument's exchange symbol"
        required: true
        type: "string"
      - name: "shares"
        in: "query"
        description: "number of shares"
        required: true
        type: "integer"
        format: "int32"
      - name: "pricePerShare"
        in: "query"
        description: "Price of each share"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Position"
  /createAccount:
    post:
      tags:
      - "Customers"
      - "Accounts"
      summary: "Create a new account"
      description: ""
      operationId: "createAccount"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "query"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      - name: "newAccountType"
        in: "query"
        description: "Account type (CHECKING, SAVINGS, LOAN)"
        required: true
        type: "integer"
        format: "int32"
      - name: "fromAccountId"
        in: "query"
        description: "Customer funds source account"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
  /deposit:
    post:
      tags:
      - "Accounts"
      summary: "Deposit funds"
      description: ""
      operationId: "deposit"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        description: "Customer funds target account"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "query"
        description: "Amount"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
  /accounts/{accountId}:
    get:
      tags:
      - "Accounts"
      summary: "Get Account by Id"
      description: ""
      operationId: "getAccount"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
  /customers/{customerId}:
    get:
      tags:
      - "Customers"
      summary: "Get Customer Details"
      description: ""
      operationId: "getCustomer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
  /positions/{positionId}/{startDate}/{endDate}:
    get:
      tags:
      - "Positions"
      summary: "Get Position history by id within a date range"
      description: ""
      operationId: "getPositionHistory"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "positionId"
        in: "path"
        description: "Unique identifier for the position"
        required: true
        type: "integer"
        format: "int32"
      - name: "startDate"
        in: "path"
        description: "Search starting date"
        required: true
        type: "string"
      - name: "endDate"
        in: "path"
        description: "Search ending date"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HistoryPoint"
  /customers/{customerId}/sellPosition:
    post:
      tags:
      - "Positions"
      summary: "Sell a Position"
      description: ""
      operationId: "sellPosition"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      - name: "accountId"
        in: "query"
        description: "Customer funds target account"
        required: true
        type: "integer"
        format: "int32"
      - name: "positionId"
        in: "query"
        description: "Unique identifier for the position"
        required: true
        type: "integer"
        format: "int32"
      - name: "shares"
        in: "query"
        description: "number of shares"
        required: true
        type: "integer"
        format: "int32"
      - name: "pricePerShare"
        in: "query"
        description: "Price of each share"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Position"
  /customers/update/{customerId}:
    post:
      tags:
      - "Customers"
      summary: "Update customer information"
      description: ""
      operationId: "updateCustomer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      - name: "firstName"
        in: "query"
        description: "Customer's given (first) name"
        required: true
        type: "string"
      - name: "lastName"
        in: "query"
        description: "Customer's surname (last name)"
        required: true
        type: "string"
      - name: "street"
        in: "query"
        description: "Street Address including bilding number and apartment (if any)"
        required: true
        type: "string"
      - name: "city"
        in: "query"
        description: "City"
        required: true
        type: "string"
      - name: "state"
        in: "query"
        description: "US state or Region name"
        required: true
        type: "string"
      - name: "zipCode"
        in: "query"
        description: "ZIP code or province id"
        required: true
        type: "string"
      - name: "phoneNumber"
        in: "query"
        description: "Contact Phone Number"
        required: true
        type: "string"
      - name: "ssn"
        in: "query"
        description: "Social Security Number"
        required: true
        type: "string"
      - name: "username"
        in: "query"
        description: "Customer's user name"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "Customer's password"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
  /withdraw:
    post:
      tags:
      - "Accounts"
      summary: "Withdraw funds"
      description: ""
      operationId: "withdraw"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        description: "Customer funds source account"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "query"
        description: "Amount"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
  /cleanDB:
    post:
      tags:
      - "Database"
      summary: "Clean the Database"
      description: ""
      operationId: "cleanDB"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /initializeDB:
    post:
      tags:
      - "Database"
      summary: "Initialize the Database"
      description: ""
      operationId: "initializeDB"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /shutdownJmsListener:
    post:
      tags:
      - "JMS"
      summary: "Stop JMS Listener"
      description: ""
      operationId: "shutdownJmsListener"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /startupJmsListener:
    post:
      tags:
      - "JMS"
      summary: "Start JMS Listener"
      description: ""
      operationId: "startupJmsListener"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /accounts/{accountId}/transactions:
    get:
      tags:
      - "Accounts"
      - "Transactions"
      summary: "Get the list of Transactions for the account"
      description: ""
      operationId: "getTransactions"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /requestLoan:
    post:
      tags:
      - "Loans"
      summary: "Request a loan"
      description: ""
      operationId: "requestLoan"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "query"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "query"
        description: "Amount"
        required: true
        type: "number"
      - name: "downPayment"
        in: "query"
        description: "Downpayment for the loan"
        required: true
        type: "number"
      - name: "fromAccountId"
        in: "query"
        description: "Customer funds source account"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoanResponse"
  /customers/{customerId}/positions:
    get:
      tags:
      - "Customers"
      - "Positions"
      summary: "Get Positions for Customer"
      description: ""
      operationId: "getPositions"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Position"
  /accounts/{accountId}/transactions/amount/{amount}:
    get:
      tags:
      - "Accounts"
      - "Transactions"
      summary: "Create transactions by amount for account"
      description: ""
      operationId: "getTransactionsByAmount"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "path"
        description: "Amount"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /accounts/{accountId}/transactions/month/{month}/type/{type}:
    get:
      tags:
      - "Accounts"
      - "Transactions"
      summary: "Fetch transactions by month and type for account"
      description: ""
      operationId: "getTransactionsByMonthAndType"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      - name: "month"
        in: "path"
        description: "Month to use for the search range"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "Transaction type (CREDIT, DEBIT)"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /accounts/{accountId}/transactions/fromDate/{fromDate}/toDate/{toDate}:
    get:
      tags:
      - "Accounts"
      - "Transactions"
      summary: "Fetch transactions for date range for account"
      description: ""
      operationId: "getTransactionsByToFromDate"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      - name: "fromDate"
        in: "path"
        description: "Search starting date"
        required: true
        type: "string"
      - name: "toDate"
        in: "path"
        description: "Search ending date"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /accounts/{accountId}/transactions/onDate/{onDate}:
    get:
      tags:
      - "Accounts"
      - "Transactions"
      summary: "Fetch transactions for a specific date for account"
      description: ""
      operationId: "getTransactionsOnDate"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id"
        required: true
        type: "integer"
        format: "int32"
      - name: "onDate"
        in: "path"
        description: "Search specific date"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /billpay:
    post:
      tags:
      - "Accounts"
      summary: "Pay bill"
      description: ""
      operationId: "billPay"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        description: "Bill payment source account"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "query"
        description: "Amount"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "Payee"
        required: true
        schema:
          $ref: "#/definitions/Payee"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BillPayResult"
  /customers/{customerId}/accounts:
    get:
      tags:
      - "Customers"
      - "Accounts"
      summary: "Get Customer Accounts"
      description: ""
      operationId: "getAccounts"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer's id"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
  /setParameter/{name}/{value}:
    post:
      tags:
      - "Misc"
      summary: "Set Parameters"
      description: ""
      operationId: "setParameter"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Parameter Name"
        required: true
        type: "string"
      - name: "value"
        in: "path"
        description: "Parameter Value"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /positions/{positionId}:
    get:
      tags:
      - "Positions"
      summary: "Get Position by id"
      description: ""
      operationId: "getPosition"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "positionId"
        in: "path"
        description: "Unique identifier for the position"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Position"
  /transactions/{transactionId}:
    get:
      tags:
      - "Transactions"
      summary: "Get the transaction for the id"
      description: ""
      operationId: "getTransaction"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        description: "Unique identifier for the transaction"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
  /login/{username}/{password}:
    get:
      tags:
      - "Misc"
      summary: "Login (john/demo)"
      description: ""
      operationId: "login"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Customer's user name"
        required: true
        type: "string"
      - name: "password"
        in: "path"
        description: "Customer's password"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
  /transfer:
    post:
      tags:
      - "Accounts"
      summary: "Transfer funds"
      description: ""
      operationId: "transfer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "fromAccountId"
        in: "query"
        description: "Customer funds source account"
        required: true
        type: "integer"
        format: "int32"
      - name: "toAccountId"
        in: "query"
        description: "Customer funds target account"
        required: true
        type: "integer"
        format: "int32"
      - name: "amount"
        in: "query"
        description: "Amount"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
definitions:
  Position:
    type: "object"
    properties:
      positionId:
        type: "integer"
        format: "int32"
      customerId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      symbol:
        type: "string"
      shares:
        type: "integer"
        format: "int32"
      purchasePrice:
        type: "number"
    xml:
      name: "position"
  Account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      customerId:
        type: "integer"
        format: "int32"
      balance:
        type: "number"
      type:
        type: "string"
        enum:
        - "CHECKING"
        - "SAVINGS"
        - "LOAN"
    xml:
      name: "account"
  Address:
    type: "object"
    properties:
      street:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      firstName:
        type: "string"
      lastName:
        type: "string"
      address:
        $ref: "#/definitions/Address"
      phoneNumber:
        type: "string"
      ssn:
        type: "string"
    xml:
      name: "customer"
  HistoryPoint:
    type: "object"
    properties:
      symbol:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      closingPrice:
        type: "number"
    xml:
      name: "historyPoint"
      namespace: "http://service.parabank.parasoft.com/"
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      accountId:
        type: "integer"
        format: "int32"
      date:
        type: "string"
        format: "date-time"
      amount:
        type: "number"
      description:
        type: "string"
      type:
        type: "string"
        enum:
        - "Credit"
        - "Debit"
    xml:
      name: "transaction"
  LoanResponse:
    type: "object"
    required:
    - "loanProviderName"
    properties:
      responseDate:
        type: "string"
        format: "date-time"
      loanProviderName:
        type: "string"
      approved:
        type: "boolean"
      message:
        type: "string"
      accountId:
        type: "integer"
        format: "int32"
    xml:
      name: "loanResponse"
      namespace: "http://service.parabank.parasoft.com/"
  BillPayResult:
    type: "object"
    properties:
      payeeName:
        type: "string"
      amount:
        type: "number"
      accountId:
        type: "integer"
        format: "int32"
    xml:
      name: "billPayResult"
  Payee:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        $ref: "#/definitions/Address"
      phoneNumber:
        type: "string"
      accountNumber:
        type: "integer"
        format: "int32"
